---
title: "Homework5"
author: "Eric Song"
format: html
editor: visual
---

```{r,include=FALSE}
library(tidyverse)
library(dplyr)
```

## Task 1

**Original Code**

```{r}
d1=read.table("student-mat.csv",sep=";",header=TRUE)
d2=read.table("student-por.csv",sep=";",header=TRUE)
d3=merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
str(d3)
print(nrow(d3)) # 382 students
```

**Using inner join().**   

```{r}
joined_d3 <- inner_join(d1,d2, 
                        by = c("school", "sex", "age", "address", "famsize","Pstatus","Medu", "Fedu", "Mjob", "Fjob", "reason","nursery","internet")
)

str(joined_d3)
```

Many to many relationship warning on row 79.  Our data is also split between non joined variables.      



**All variables but no G1,G2,G3,Paid, and absences.**

```{r}
final_d1 <- inner_join(d1, d2,
              #joins everything but specified columns in setdiff
              by = names(d1) |>
                setdiff(c("G1", "G2", "G3", "paid", "absences"))
)
str(final_d1)
```

**Picking School,Sex, Famsize, and Reason as our categorical variables.**
```{r}
final_d1 <- final_d1 %>%
  mutate(
    school = as.factor(school),
    sex = as.factor(sex),
    famsize = as.factor(famsize),
    reason = as.factor(reason)
  )
str(final_d1)
```

## Task 2

#### Categorical Variables

**One-way contingency table**
```{r}
one_way_tbl <- table(final_d1$school)
one_way_tbl
one_way_tbl[1]
```

There are 287 students going to GP.

**Two-way contingency table**
```{r}
two_way_tbl <- table(final_d1$school,final_d1$sex)
two_way_tbl
two_way_tbl[1,1]
```

153 Female students go to GP.  

**Three-way contingency table**
```{r}
three_way_tbl <- table(final_d1$school,final_d1$sex,final_d1$famsize)
three_way_tbl
three_way_tbl[1,1,1]
```

115 Female Students that go to GP come from a family greater than 3.  


**Filter method:**
```{r}
filter_d1 <- final_d1 |> 
  filter(school == "GP")
cond_two_way <-table(filter_d1$sex,filter_d1$famsize)
cond_two_way
```

**Three way table method (using previous three way variable):**
```{r}
cond_three_way <- three_way_tbl["GP",,]
cond_three_way
```

**Using group_by(),summarize(),and pivot_wider().**

```{r}
new_two_way <- final_d1 |>
                  drop_na(school,sex) |>
                  group_by(school,sex) |>
                  summarize(count=n()) |>
                  pivot_wider(names_from=sex,values_from=count)
new_two_way
```

**Stacked bar graph**
```{r}
ggplot(data= final_d1 |> drop_na(reason,sex),aes(x = reason, fill = sex)) +
  geom_bar() + 
  labs(
    title = "Stacked Bar Graph: Reason vs Sex",
    x = "School",
    y = "# of Students"
  )
```
**Side by Side Graph.**
```{r}
ggplot(data= final_d1 |> drop_na(school,sex),aes(x = school, fill = sex)) +
  geom_bar(position = "dodge") + 
  labs(
    title = "Side by Side Graph: School vs Sex",
    x = "School",
    y = "# of Students"
  )
```

#### Numeric Variables


**Single Grouping (by sex):**
```{r}
one_summary <- final_d1 |>
              #combining G3s together
              mutate(new_G3 = rowMeans(cbind(G3.x, G3.y), na.rm = TRUE)) |>
                group_by(sex) |>
                drop_na(sex) |>
                  summarise(
                    mean_G3 = mean(new_G3, na.rm = TRUE),
                    median_G3 = median(new_G3, na.rm = TRUE),
                    sd_G3 = sd(new_G3, na.rm = TRUE),
                    IQR_G3 = IQR(new_G3, na.rm = TRUE),
                    
                    mean_age = mean(age, na.rm = TRUE),
                    median_age = median(age, na.rm = TRUE),
                    sd_age = sd(age, na.rm = TRUE),
                    IQR_age = IQR(age, na.rm = TRUE),
    
                    mean_health = mean(health, na.rm = TRUE),
                    median_health = median(health, na.rm = TRUE),
                    sd_health = sd(health, na.rm = TRUE),
                    IQR_health = IQR(health, na.rm = TRUE)
                   )
one_summary
```


**Two grouping variables (Sex and School):**
```{r}
two_summary <- final_d1 |>
                mutate(new_G2 = rowMeans(cbind(G2.x, G2.y), na.rm = TRUE),          new_absences = rowMeans(cbind(absences.x, absences.y, na.rm = TRUE))) |>
                group_by(sex,school) |>
                drop_na(sex,school) |>
                  summarise(
                    mean_G3 = mean(new_G2, na.rm = TRUE),
                    median_G3 = median(new_G2, na.rm = TRUE),
                    sd_G3 = sd(new_G2, na.rm = TRUE),
                    IQR_G3 = IQR(new_G2, na.rm = TRUE),
                    
                    mean_age = mean(age, na.rm = TRUE),
                    median_age = median(age, na.rm = TRUE),
                    sd_age = sd(age, na.rm = TRUE),
                    IQR_age = IQR(age, na.rm = TRUE),
    
                    mean_absences = mean(new_absences, na.rm = TRUE),
                    median_absences = median(new_absences, na.rm = TRUE),
                    sd_absences = sd(new_absences, na.rm = TRUE),
                    IQR_absences = IQR(new_absences, na.rm = TRUE)
                   )
two_summary
```
**Correlation matrix of all numeric variables.**

```{r}
numeric_d1 <- final_d1 |>
  select(where(is.numeric))

cor_matrix <- cor(numeric_d1)
cor_matrix
```


• Create a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the
categorical variables (that is, create graphs that can compare the distributions across the groups on
the same plot (no faceting here)). Add appropriate labels and titles.
• Create two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You
should jitter the points if they sit on top of each other. Color the points by a categorical variable in
each. Add appropriate labels and titles.
• Repeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical
variable.
• Repeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical
variables.
